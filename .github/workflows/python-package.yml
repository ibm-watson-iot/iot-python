# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "*" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        primary-config: ["true", "false"]
        include:
          - python-version: "3.9"
            primary-config: "false"
          - python-version: "3.10"
            primary-config: "false"
          - python-version: "3.11"
            primary-config: "true"
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[dev] flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        ONE_JOB_ONLY_TESTS: ${{secrets[matrix.primary-config]}}
      run: |
        pytest
        # If needed we can gate this step to only run on master
        # BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
        # if [[ "$BRANCH" == 'refs/heads/master' ]]; then
        #   pytest
        # else
        #   echo "Tests are only ran for pushes to master"
        # fi
